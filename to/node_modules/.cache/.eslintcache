[{"C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\index.js":"1","C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\App.js":"2","C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\components\\ToDoForm.js":"3","C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\components\\ToDoList.js":"4","C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\components\\ToDo.js":"5","C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\components\\SearchBar.js":"6","C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\Modal.js":"7"},{"size":234,"mtime":1666013775900,"results":"8","hashOfConfig":"9"},{"size":205,"mtime":1666108269771,"results":"10","hashOfConfig":"9"},{"size":993,"mtime":1666084958098,"results":"11","hashOfConfig":"9"},{"size":1782,"mtime":1666108422280,"results":"12","hashOfConfig":"9"},{"size":1823,"mtime":1666108405249,"results":"13","hashOfConfig":"9"},{"size":2394,"mtime":1666087675626,"results":"14","hashOfConfig":"9"},{"size":566,"mtime":1666106873041,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"qxcwn4",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\index.js",[],[],[],"C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\App.js",[],[],"C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\components\\ToDoForm.js",[],[],"C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\components\\ToDoList.js",[],[],"C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\components\\ToDo.js",[],[],"C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\components\\SearchBar.js",["39"],[],"import React, { useState } from \"react\";\r\nimport \"./SearchBar.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {RiCloseCircleLine} from 'react-icons/ri'\r\nimport {TiEdit} from 'react-icons/ti'\r\nimport ToDoList from './ToDoList'\r\n\r\nfunction SearchBar({  data, completeTodo, removeTodo,updateTodo }) {\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [wordEntered, setWordEntered] = useState(\"\");\r\n  \r\n  const handleFilter = (event) => {\r\n    const searchWord = event.target.value;\r\n    setWordEntered(searchWord);\r\n\r\n    const newFilter = data.filter((value) => {\r\n     console.log(value.text);\r\n      return value.text.toLowerCase().includes(searchWord.toLowerCase());\r\n     \r\n    });\r\n\r\n    if (searchWord === \"\") {\r\n      setFilteredData([]);\r\n    } else {\r\n      setFilteredData(newFilter);\r\n    }\r\n  };\r\n\r\n  const clearInput = () => {\r\n    setFilteredData([]);\r\n    setWordEntered(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"searchInputs\">\r\n        <input\r\n         placeholder=\"searhe here\"\r\n          type=\"text\"\r\n          value={wordEntered}\r\n          onChange={handleFilter}\r\n        />\r\n        <div className=\"searchIcon\">\r\n          {filteredData.length === 0 ? (\r\n            <SearchIcon />\r\n          ) : (\r\n            <CloseIcon id=\"clearBtn\" onClick={clearInput} />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {filteredData.length !== 0 && (\r\n\r\n        <div className=\"dataResult\">\r\n          {filteredData.map((todo, index) => {\r\n            return (\r\n                <div\r\n                className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n                key={index}\r\n              >\r\n                <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                  {todo.text}\r\n                </div>\r\n                <div className='icons'>\r\n             \r\n                <RiCloseCircleLine\r\n               onClick={() => removeTodo(todo.id)}\r\n               className='delete-icon'\r\n                />\r\n                  <TiEdit\r\n                    onClick={() =>updateTodo(todo.id)}\r\n                    className='edit-icon'\r\n                  />\r\n                </div>\r\n              </div>\r\n            \r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\Lenovo\\Desktop\\react todo\\to\\src\\Modal.js",[],[],{"ruleId":"40","severity":1,"message":"41","line":7,"column":8,"nodeType":"42","messageId":"43","endLine":7,"endColumn":16},"no-unused-vars","'ToDoList' is defined but never used.","Identifier","unusedVar"]