{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\react todo\\\\to\\\\src\\\\components\\\\ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ToDo from './ToDo';\nimport ToDoForm from './ToDoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const addToDo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return; // check for empty spaces. by  js regexp dont add any thing\n    }\n\n    const newToDos = [todo, ...todos];\n    setTodos(newToDos);\n    console.log(newToDos);\n  };\n  const updateToDo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(todo.text)) {\n      return; // check for empty spaces. by  js regexp dont add any thing\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n  const removeTodo = id => {\n    const afterRemove = todos.filter(todo => todo.id !== id);\n    setTodos(afterRemove);\n  };\n  const completeToDo = id => {\n    const updatedToDo = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete; //toggle\n      }\n\n      return todo;\n    });\n    setTodos(updatedToDo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What is the plan for Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ToDoForm, {\n      onSubmit: addToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ToDo, {\n      todos: todos,\n      completeToDo: completeToDo,\n      removeTodo: removeTodo,\n      updateToDo: updateToDo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"uu1hS44ImpqtDP84/kJI6RehsRs=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","ToDo","ToDoForm","ToDoList","todos","setTodos","addToDo","todo","text","test","newToDos","console","log","updateToDo","todoId","newValue","prev","map","item","id","removeTodo","afterRemove","filter","completeToDo","updatedToDo","isComplete"],"sources":["C:/Users/Lenovo/Desktop/react todo/to/src/components/ToDoList.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport ToDo from './ToDo'\r\nimport ToDoForm from './ToDoForm'\r\n\r\nfunction ToDoList() {\r\n  const[todos,setTodos]=useState([])\r\n\r\nconst addToDo=(todo)=>{\r\n    if(!todo.text || /^\\s*$/.test(todo.text)){\r\n        return // check for empty spaces. by  js regexp dont add any thing\r\n    }\r\n    const newToDos=[todo,...todos]\r\n     setTodos(newToDos)\r\n     console.log(newToDos);\r\n}\r\nconst updateToDo=(todoId,newValue)=>{\r\n    if(!newValue.text || /^\\s*$/.test(todo.text)){\r\n        return // check for empty spaces. by  js regexp dont add any thing\r\n    }\r\n    setTodos(prev=> prev.map(( item => item.id === todoId ? newValue : item)))\r\n}\r\nconst removeTodo=(id)=>{\r\n    const afterRemove=todos.filter((todo)=>todo.id!==id)\r\n    setTodos(afterRemove)\r\n    \r\n    \r\n    }\r\n\r\nconst completeToDo=(id)=>{\r\n    const updatedToDo=todos.map((todo)=>{\r\n        if(todo.id===id){\r\n            todo.isComplete=!todo.isComplete //toggle\r\n        }\r\n        return todo\r\n    })\r\nsetTodos(updatedToDo)\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n   <h1>What is the plan for Today</h1>\r\n   <ToDoForm onSubmit={addToDo}/>\r\n   <ToDo \r\n   todos={todos}\r\n   completeToDo={completeToDo}\r\n   removeTodo={removeTodo}\r\n   updateToDo={updateToDo}\r\n   \r\n   />\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToDoList"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAEjC,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAK,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACL,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMM,OAAO,GAAEC,IAAI,IAAG;IAClB,IAAG,CAACA,IAAI,CAACC,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EAAC;MACrC,OAAM,CAAC;IACX;;IACA,MAAME,QAAQ,GAAC,CAACH,IAAI,EAAC,GAAGH,KAAK,CAAC;IAC7BC,QAAQ,CAACK,QAAQ,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EAC1B,CAAC;EACD,MAAMG,UAAU,GAAC,CAACC,MAAM,EAACC,QAAQ,KAAG;IAChC,IAAG,CAACA,QAAQ,CAACP,IAAI,IAAI,OAAO,CAACC,IAAI,CAACF,IAAI,CAACC,IAAI,CAAC,EAAC;MACzC,OAAM,CAAC;IACX;;IACAH,QAAQ,CAACW,IAAI,IAAGA,IAAI,CAACC,GAAG,CAAGC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,GAAGC,QAAQ,GAAGG,IAAI,CAAE,CAAC;EAC9E,CAAC;EACD,MAAME,UAAU,GAAED,EAAE,IAAG;IACnB,MAAME,WAAW,GAACjB,KAAK,CAACkB,MAAM,CAAEf,IAAI,IAAGA,IAAI,CAACY,EAAE,KAAGA,EAAE,CAAC;IACpDd,QAAQ,CAACgB,WAAW,CAAC;EAGrB,CAAC;EAEL,MAAME,YAAY,GAAEJ,EAAE,IAAG;IACrB,MAAMK,WAAW,GAACpB,KAAK,CAACa,GAAG,CAAEV,IAAI,IAAG;MAChC,IAAGA,IAAI,CAACY,EAAE,KAAGA,EAAE,EAAC;QACZZ,IAAI,CAACkB,UAAU,GAAC,CAAClB,IAAI,CAACkB,UAAU,EAAC;MACrC;;MACA,OAAOlB,IAAI;IACf,CAAC,CAAC;IACNF,QAAQ,CAACmB,WAAW,CAAC;EACrB,CAAC;EAIC,oBACE;IAAA,wBACD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmC,eACnC,QAAC,QAAQ;MAAC,QAAQ,EAAElB;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAE,eAC9B,QAAC,IAAI;MACL,KAAK,EAAEF,KAAM;MACb,YAAY,EAAEmB,YAAa;MAC3B,UAAU,EAAEH,UAAW;MACvB,UAAU,EAAEP;IAAW;MAAA;MAAA;MAAA;IAAA,QAErB;EAAA;IAAA;IAAA;IAAA;EAAA,QAIK;AAEV;AAAC,GApDQV,QAAQ;AAAA,KAARA,QAAQ;AAsDjB,eAAeA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}